{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"nu",
				"number\tkeyword"
			],
			[
				"get",
				"getItemContainerIds\tmethod"
			],
			[
				"media",
				"mediaList"
			],
			[
				"pr",
				"private\tkeyword"
			],
			[
				"pushQ",
				"pushQItemDel\tmethod"
			],
			[
				"med",
				"mediaIndex\tlet"
			],
			[
				"dele",
				"deleteMediaConfirmed\tmethod"
			],
			[
				"no",
				"note-edit.module\tscript"
			],
			[
				"note",
				"note-edit\tdirectory"
			],
			[
				"not",
				"note-edit\tdirectory"
			],
			[
				"mod",
				"modalsService\tproperty"
			],
			[
				"re",
				"removeContainerItems\tmethod"
			],
			[
				"new",
				"newItems\tlet"
			],
			[
				"EVENT_SERVER_CONTAINEE_",
				"EVENT_SERVER_CONTAINEE_REMOVED\talias"
			],
			[
				"Ion",
				"IonicStorageModule\talias"
			],
			[
				"contain",
				"containeeId\tparameter"
			],
			[
				"cont",
				"containerId\tparameter"
			],
			[
				"ev",
				"serverEvents\tproperty"
			],
			[
				"au",
				"authToken\tgetter"
			],
			[
				"se",
				"server-events.service\tscript"
			],
			[
				"f",
				"forEach\tmethod"
			],
			[
				"wat",
				"watchListResync\tmethod"
			],
			[
				"on",
				"onclose\tproperty"
			],
			[
				"Obj",
				"ObjectId\talias"
			],
			[
				"find",
				"findIndex\tmethod"
			],
			[
				"So",
				"Socket\talias"
			],
			[
				"Soc",
				"SocketIoConfig\talias"
			],
			[
				"S",
				"SocketIoModule\talias"
			],
			[
				"save",
				"pushQItemSave\tmethod"
			],
			[
				"upd",
				"updateQ\tproperty"
			],
			[
				"I",
				"ITEM_SAVE\tproperty"
			],
			[
				"conta",
				"containerId\tparameter"
			],
			[
				"Htt",
				"HttpHeaders\talias"
			],
			[
				"conf",
				"confirm_id\tlet"
			],
			[
				"substr",
				"substring\tmethod"
			],
			[
				"It",
				"ItemList\tscript"
			],
			[
				"ou",
				"outboxInProcess\tproperty"
			],
			[
				"out",
				"outboxActive\tproperty"
			],
			[
				"CACHE",
				"CacheService\tclass"
			],
			[
				"Cache",
				"CacheService\talias"
			],
			[
				"dis",
				"dismiss"
			],
			[
				"reg",
				"register.module\tscript"
			],
			[
				"Network",
				"NetworkOriginal\tclass"
			],
			[
				"lo",
				"login.page\tscript"
			],
			[
				"n",
				"navigateRoot\tmethod"
			],
			[
				"Nav",
				"NavController\talias"
			],
			[
				"user",
				"userIdGeoff\tconst"
			],
			[
				"st",
				"storyIdBcEpic\tconst"
			],
			[
				"stor",
				"storyIdTD\tvar"
			],
			[
				"storyI",
				"storyIdBcEpic\tvar"
			],
			[
				"test",
				"test_init\talias"
			],
			[
				"json_u",
				"json_unimplemented\talias"
			],
			[
				"adven",
				"adventureIdTD\tconst"
			],
			[
				"foll",
				"followingAdventure\tfunction"
			],
			[
				"adventureId",
				"adventureIdTransAM\tconst"
			],
			[
				"profile",
				"profileIdOwen\tconst"
			],
			[
				"Profile",
				"ProfileSchema\tvar"
			],
			[
				"act",
				"activityId\tlet"
			],
			[
				"adventur",
				"adventureIdTD\tvar"
			],
			[
				"fields",
				"fieldsUserAuth\tconst"
			],
			[
				"fieldsPro",
				"fieldsProfileAuth\tconst"
			],
			[
				"fie",
				"fieldsUserAuth\tconst"
			],
			[
				"gt",
				"greaterThan\tproperty"
			],
			[
				"status",
				"status_code\tparameter"
			],
			[
				"authToken",
				"authTokenIdRochelle\tconst"
			],
			[
				"auth",
				"authTokenIdRochelle\tconst"
			],
			[
				"con",
				"console\tvar"
			],
			[
				"add",
				"addToTimeline\talias"
			],
			[
				"stream",
				"streamClient\tlet"
			],
			[
				"Me",
				"MediaSchema\tconst"
			],
			[
				"acti",
				"activity_id\tparameter"
			],
			[
				"json_",
				"json_invalid_parameter\talias"
			],
			[
				"pro",
				"process\texternal module name"
			],
			[
				"up",
				"updateFeed\tmethod"
			],
			[
				"json_in",
				"json_invalid_parameter\talias"
			],
			[
				"profil",
				"profileJSON\tlet"
			],
			[
				"strea",
				"streamClient\tlet"
			],
			[
				"json",
				"json_internal_error\talias"
			],
			[
				"r",
				"resolve\tmethod"
			],
			[
				"authTestUsern",
				"authTestUserNote2\tlocal var"
			],
			[
				"authTest",
				"authTestUserNote2\tlocal var"
			],
			[
				"authTo",
				"authTokenPromise\tlet"
			],
			[
				"authTestUser",
				"authTestUserId\tlocal var"
			],
			[
				"AuthTo",
				"AuthTokenSchema\tvar"
			],
			[
				"ident",
				"identity_maps\tvar"
			],
			[
				"ide",
				"identity_maps\tvar"
			],
			[
				"profi",
				"profile_create"
			],
			[
				"strin",
				"Stringify"
			],
			[
				"par",
				"parsed_json"
			],
			[
				"domain",
				"domain_to_id_map"
			],
			[
				"van",
				"vanity_path_to_id_map"
			],
			[
				"base",
				"base_domain_name"
			],
			[
				"path",
				"path_lib"
			],
			[
				"cons",
				"console"
			],
			[
				"dom",
				"domain_to_id_map"
			],
			[
				"pri",
				"private_key\tparameter"
			],
			[
				"K",
				"KJUR\talias"
			],
			[
				"loca",
				"locationData\tparameter"
			],
			[
				"Location",
				"LocationData\talias"
			],
			[
				"location",
				"locationData\tlet"
			],
			[
				"geo",
				"getGeolocation\tmethod"
			],
			[
				"fin",
				"findIndex\tmethod"
			],
			[
				"ca",
				"captureVideo\tmethod"
			],
			[
				"imp",
				"import\timports a module â€¦"
			],
			[
				"is",
				"isAuthenticatedQuick\tmethod"
			],
			[
				"nav",
				"navCtrl\tproperty"
			],
			[
				"acc",
				"account-settings\tdirectory"
			],
			[
				"in",
				"indexOf\tmethod"
			],
			[
				"Acc",
				"AccountPage\talias"
			],
			[
				"set",
				"setRoot\tmethod"
			],
			[
				"toLo",
				"toLocaleTimeString\tmethod"
			],
			[
				"File",
				"FileDialog\talias"
			],
			[
				"work",
				"workEditor\tproperty"
			],
			[
				"image",
				"image64Enc\tparameter"
			],
			[
				"log",
				"loggedIn\tproperty"
			],
			[
				"Disc",
				"DiscoverPage\talias"
			],
			[
				"pars",
				"parsed_body"
			],
			[
				"current",
				"current_persona"
			],
			[
				"border",
				"border-bottom"
			],
			[
				"over",
				"overflow-y"
			],
			[
				"name",
				"name_list"
			],
			[
				"font-",
				"font-size"
			],
			[
				"convers",
				"conversation"
			],
			[
				"text",
				"text-align"
			],
			[
				"p",
				"personas"
			],
			[
				"po",
				"popup_div"
			],
			[
				"b",
				"border-radius"
			],
			[
				"geoff",
				"geoff_lustrio_email"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/geoff/Source/silicon/src/app/constants.events.ts",
			"settings":
			{
				"buffer_size": 1677,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/services/outbox.service.ts",
			"settings":
			{
				"buffer_size": 8437,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/models/Item.ts",
			"settings":
			{
				"buffer_size": 10967,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/note-edit/note-edit.page.scss",
			"settings":
			{
				"buffer_size": 67,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/services/backend.service.ts",
			"settings":
			{
				"buffer_size": 7430,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/services/api.service.ts",
			"settings":
			{
				"buffer_size": 5557,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/services/cache.service.ts",
			"settings":
			{
				"buffer_size": 13537,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 121 files for \"getContainerItems\" (case sensitive)\n\n/Users/geoff/Source/silicon/src/app/components/item-card/item-card.component.ts:\n   45    async ngOnInit() {\n   46      // log('ItemCardComponent.ngOnInit(): item', this.item);\n   47:     this.mediaList = await this.backend.getContainerItems(this.item.id) as Media[];\n   48    }\n   49  \n\n/Users/geoff/Source/silicon/src/app/components/item-list-view/item-list-view.component.ts:\n   70    \t// log('item updated to: ' + this.container);\n   71    \tthis.list.length = 0;\n   72:   \tthis.list = await this.backend.getContainerItems(this.container.id);\n   73      this.sortByCreatedAt();\n   74    }\n\n/Users/geoff/Source/silicon/src/app/services/backend.service.ts:\n  166    // If not connected to server, go get the cached Items instead.\n  167    // TODO: Need to handle pagination.\n  168:   public async getContainerItems(containerId:string):Promise<Item[]> {\n  169      let items:Item[];\n  170      // TODO: Would be more efficient if we could send this function some indication of what we\n  ...\n  181      } else\n  182        // Get the cached items in this container.\n  183:       items = await this.cache.getContainerItems(containerId);\n  184:     log(\"Backend.getContainerItems() items\", items);\n  185      return items;\n  186    }\n\n/Users/geoff/Source/silicon/src/app/services/cache.service.ts:\n  199  \n  200  \n  201:   // getContainerItems - get an array of Items that belong in the Item containerId.\n  202:   public async getContainerItems(containerId:string):Promise<Item[]> {\n  203      try {\n  204:       log(\"CacheService.getContainerItems() containerId\", containerId);\n  205        const containeeIds = await this.getItemContaineeIds(containerId);\n  206:       // log(\"CacheService.getContainerItems() containeeIds\", containeeIds);\n  207        let items:Item[] = [];\n  208        for (let containeeId of containeeIds) {\n  209          let item:Item = await this.get(containeeId);\n  210          if (item) {\n  211:           // log('CacheService.getContainerItems() item', item);\n  212            items.push(item);\n  213          } else\n  ...\n  216        return items;\n  217      } catch(err) {\n  218:       log(\"CacheService.getContainerItems() caught error\", err);\n  219        return [];\n  220      }\n  ...\n  273        this.events.publish(EVENT_CACHE_ITEM_REMOVED, itemId);\n  274      } catch(err) {\n  275:       error(\"CacheService.getContainerItems() caught error\", err);\n  276      }\n  277  \n\n12 matches across 4 files\n\n\nSearching 121 files for \"getContainerItems\" (case sensitive)\n\n/Users/geoff/Source/silicon/src/app/components/item-card/item-card.component.ts:\n   45    async ngOnInit() {\n   46      // log('ItemCardComponent.ngOnInit(): item', this.item);\n   47:     this.mediaList = await this.backend.getContainerItems(this.item.id) as Media[];\n   48    }\n   49  \n\n/Users/geoff/Source/silicon/src/app/components/item-list-view/item-list-view.component.ts:\n   70    \t// log('item updated to: ' + this.container);\n   71    \tthis.list.length = 0;\n   72:   \tthis.list = await this.backend.getContainerItems(this.container.id);\n   73      this.sortByCreatedAt();\n   74    }\n\n/Users/geoff/Source/silicon/src/app/services/backend.service.ts:\n  166    // If not connected to server, go get the cached Items instead.\n  167    // TODO: Need to handle pagination.\n  168:   public async getContainerItems(containerId:string):Promise<Item[]> {\n  169      let items:Item[];\n  170      // TODO: Would be more efficient if we could send this function some indication of what we\n  ...\n  181      } else\n  182        // Get the cached items in this container.\n  183:       items = await this.cache.getContainerItems(containerId);\n  184:     log(\"Backend.getContainerItems() items\", items);\n  185      return items;\n  186    }\n\n/Users/geoff/Source/silicon/src/app/services/cache.service.ts:\n  199  \n  200  \n  201:   // getContainerItems - get an array of Items that belong in the Item containerId.\n  202:   public async getContainerItems(containerId:string):Promise<Item[]> {\n  203      try {\n  204:       log(\"CacheService.getContainerItems() containerId\", containerId);\n  205        const containeeIds = await this.getItemContaineeIds(containerId);\n  206:       // log(\"CacheService.getContainerItems() containeeIds\", containeeIds);\n  207        let items:Item[] = [];\n  208        for (let containeeId of containeeIds) {\n  209          let item:Item = await this.get(containeeId);\n  210          if (item) {\n  211:           // log('CacheService.getContainerItems() item', item);\n  212            items.push(item);\n  213          } else\n  ...\n  216        return items;\n  217      } catch(err) {\n  218:       log(\"CacheService.getContainerItems() caught error\", err);\n  219        return [];\n  220      }\n  ...\n  273        this.events.publish(EVENT_CACHE_ITEM_REMOVED, itemId);\n  274      } catch(err) {\n  275:       error(\"CacheService.getContainerItems() caught error\", err);\n  276      }\n  277  \n\n12 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 4994,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/components/item-card/item-card.component.ts",
			"settings":
			{
				"buffer_size": 2212,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/main.ts",
			"settings":
			{
				"buffer_size": 408,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/storage/storage.page.ts",
			"settings":
			{
				"buffer_size": 1763,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/services/watch.service.ts",
			"settings":
			{
				"buffer_size": 1784,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/services/server-events.service.ts",
			"settings":
			{
				"buffer_size": 3817,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/profile/profile.page.ts",
			"settings":
			{
				"buffer_size": 2763,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/pipes/social-date/social-date.pipe.ts",
			"settings":
			{
				"buffer_size": 1678,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/note/note.page.ts",
			"settings":
			{
				"buffer_size": 1480,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/login/login.page.ts",
			"settings":
			{
				"buffer_size": 1734,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/files/files.page.ts",
			"settings":
			{
				"buffer_size": 8737,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/directives/autoresize/autoresize.directive.ts",
			"settings":
			{
				"buffer_size": 620,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/components/item-more-menu/item-more-menu.component.ts",
			"settings":
			{
				"buffer_size": 1585,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/note-edit/note-edit.page.ts",
			"settings":
			{
				"buffer_size": 7062,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/components/item-card/item-card.component.html",
			"settings":
			{
				"buffer_size": 2292,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/geoff/Source/silicon/src/app/note-edit/note-edit.page.html",
			"settings":
			{
				"buffer_size": 2167,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "// ItemListViewComponent - component that displays a list of Items that are contained in a specific Item.\n// This component watched for changes to the container Item was well as to what it contains and updates itself.\n// This component also manages the order of the contained Items in reverse chronological order based on creation date.\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Events, ModalController } from '@ionic/angular';\nimport { log } from '../../lib/log';\n\nimport { BackendService } from '../../services/backend.service';\nimport { CacheService } from '../../services/cache.service';\nimport { WatchService } from '../../services/watch.service';\n\nimport { Item } from '../../models/Item';\n\nimport { NoteEditPage } from '../../note-edit/note-edit.page';\n\nimport { \n  EVENT_CACHE_ITEM_UPDATED,\n  EVENT_CACHE_ITEM_REMOVED,\n  EVENT_CACHE_CONTAINEE_ADDED,\n  EVENT_CACHE_CONTAINEE_REMOVED,\n  ContainerRelationship,\n} from '../../constants.events';\n\n\n@Component({\n  selector: 'item-list-view',\n  templateUrl: './item-list-view.component.html',\n  styleUrls: ['./item-list-view.component.scss']\n})\nexport class ItemListViewComponent implements OnInit {\n\n\n\tprivate _container:Item;\n\tget container():Item { return this._container; }\n\t@Input() set container(newContainer:Item) { \n\t\tthis._container = newContainer; \n    this.watch.addWatch(newContainer.id);\n\t\tthis.refresh();\n\t}\n\n\n  // TODO: need to make this list a list of objects that contain an Item and it's containees.\n  private list:Item[] = [];\n\n\n  constructor(\n    private modalCtrl:ModalController,\n    private events:Events,\n    private router:Router,\n    private backend:BackendService,\n    private cache:CacheService,\n    private watch:WatchService,\n  ) {\n  this.events.subscribe(EVENT_CACHE_CONTAINEE_ADDED, (relationship:ContainerRelationship) => this.eventContainerAdd(relationship));\n  this.events.subscribe(EVENT_CACHE_CONTAINEE_REMOVED, (relationship:ContainerRelationship) => this.eventContainerRemove(relationship));\n  this.events.subscribe(EVENT_CACHE_ITEM_UPDATED, (item:Item) => this.eventItemUpdate(item));\n  this.events.subscribe(EVENT_CACHE_ITEM_REMOVED, (itemId:string) => this.eventItemRemove(itemId));\n  }\n\n\n  ngOnInit() {\n  \t// log('ItemListViewComponent.ngOnInit()');\n  }\n\n\n  // ngOnDestroy() {\n  // \tlog('ItemListViewComponent.ngOnDestroy()');\n  // }\n\n\n  private async refresh() {\n  \t// log('item updated to: ' + this.container);\n  \tthis.list.length = 0;\n  \tthis.list = await this.backend.getItemContainees(this.container.id);\n    this.sortByCreatedAt();\n  }\n\n\n  private async edit(item:Item) {\n    // log('ItemListViewComponent.edit', item);\n    this.router.navigate(['/app/note-edit/' + item.id]);\n  }\n\n\n  private show(item:Item) {\n    // log('ItemListViewComponent.show', item);\n    this.router.navigate(['/app/note/' + item.id]);\n  }\n\n\n  private async remove(itemId:string) {\n    await this.backend.removeFromContainer(this.container.id, itemId);\n  }\n\n\n  private async delete(itemId:string) {\n    await this.backend.deleteItem(itemId);\n  }\n\n\n  // add - add item to the collection. If item already in list, just update that item.\n  private async add(item:Item) {\n    console.log('ItemListViewComponent.add() item', item);\n    if (item.id == this.container.id)\n      // item is our container item so update it.\n      this.container = item;\n    else {\n      const index = this.findContaineeIndex(this.container.id);\n      if (-1 != index) {\n        // item is one of our list members so just update it.\n        this.list[index] = item;\n      } else { \n        // Check to see if the item has our container as a parent.\n        let itemContaineeIds = await this.cache.getItemContainerIds(item.id);\n        if (itemContaineeIds.includes(this.container.id)) {\n          // TODO: Performance - Instead of putting new item at the top of the list and sorting, \n          // should figure out where it goes and insert it there so we don't have to sort.\n          this.list.push(item);\n          this.sortByCreatedAt();\n          console.log('ItemListViewComponent.add() item added', item.id);\n        }\n      }\n    }    \n  }\n\n\n  // TODO: for performance reason, should not use this brute force sort but should build\n  // the array as sorted.\n  private sortByCreatedAt() {\n    // log('ItemListViewComponent.sortByCreatedAt()', this.list);\n    this.list.sort((e1:Item, e2:Item) => e2.createdAt.getTime() - e1.createdAt.getTime());  // Sort by reverse chronological order\n  }\n\n\n\n  // EVENT responses\n\n\n  // Check to see if item is the profile or an Item contained in profile and update the local value.\n  private async eventItemUpdate(item:Item) {\n    // log('ItemListViewComponent.eventItemUpdate()', item);\n    this.add(item);\n  }\n\n\n  // Check to see if item is contained by this profile and if so, remove it\n  private eventItemRemove(itemId:string) {\n    log('ItemListViewComponent.eventItemRemove()', itemId);\n    let index = this.list.findIndex((el:Item) => el.id == itemId);\n    if (index != -1)\n      this.list.splice(index, 1);\n  }\n\n\n  // Check the provided relationship to see if the containerId is the one used in this list.  If\n  // so then load the containeeId Item and add it to the list.\n  // If the containerId is one of the items in the list, then load the containeeId Item and add \n  // it to the list item.\n  private async eventContainerAdd(relationship:ContainerRelationship) {\n    try {\n      log('ItemListViewComponent.eventContainerAdd() relationship', relationship);\n      // Is this relationship a direct containee of our container\n      if (relationship.containerId == this.container.id) {\n        // If so, get that item and put into list.\n        let item = await this.backend.getItem(relationship.containeeId);\n        if (item) {\n          log('ItemListViewComponent.eventContainerAdd() item', item);\n          this.add(item);\n        } else {\n          log('ItemListViewComponent.eventContainerAdd: could not add item', relationship.containeeId);\n        }\n      } else {\n        // Is this relationship a second level containee of our container.\n        for (let i = 0; i < this.list.length; i++)\n          if (relationship.containerId == this.list[i].id) {\n            let item = await this.backend.getItem(relationship.containeeId);\n            log('ItemListViewComponent.eventContainerAdd() add second level item', item);\n            // TODO: properly add to list item...???\n          }\n      }\n    } catch (err) {\n      log('ItemListViewComponent.eventContainerAdd() err', err);\n    }\n  }\n\n\n  // If the container is this profile then the containee should be in the list so remove it.\n  private eventContainerRemove(relationship:ContainerRelationship) {\n    log('ItemListViewComponent.eventContainerRemove', relationship);\n    if (relationship.containerId == this.container.id)\n      this.eventItemRemove(relationship.containeeId);\n  }\n\n\n  private findContaineeIndex(itemId):number {\n    return this.list.findIndex(((item:Item) => item.id == itemId));\n  }\n\n\n}\n",
			"file": "/Users/geoff/Source/silicon/src/app/components/item-list-view/item-list-view.component.ts",
			"file_size": 7406,
			"file_write_time": 132086339727136004,
			"settings":
			{
				"buffer_size": 7029,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 127.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: up",
				"Package Control: Upgrade Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"PackageCon",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"contro",
				"Package Control: Install Package"
			],
			[
				"dash",
				"DashDoc: invoke Dash with selected word"
			],
			[
				"Package",
				"Package Control: Install Package"
			],
			[
				"Git",
				"Package Control: Install Package"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/geoff/Source/silicon",
		"/Users/geoff/Source/silicon/dist",
		"/Users/geoff/Source/silicon/src",
		"/Users/geoff/Source/silicon/src/app",
		"/Users/geoff/Source/silicon/src/app/components",
		"/Users/geoff/Source/silicon/src/app/components/item-card",
		"/Users/geoff/Source/silicon/src/app/components/item-list-view",
		"/Users/geoff/Source/silicon/src/app/components/item-more-menu",
		"/Users/geoff/Source/silicon/src/app/lib",
		"/Users/geoff/Source/silicon/src/app/note",
		"/Users/geoff/Source/silicon/src/app/note-edit",
		"/Users/geoff/Source/silicon/src/app/services"
	],
	"file_history":
	[
		"/Users/geoff/Source/silicon/src/app/components/item-card/item-card.component.ts",
		"/Users/geoff/Source/silicon/src/app/lib/log.ts",
		"/Users/geoff/Source/silicon/src/app/lib/tlog.ts",
		"/Users/geoff/Source/silicon/src/app/services/modals.service.ts",
		"/Users/geoff/Source/silicon/src/app/services/cache.service.ts",
		"/Users/geoff/Source/silicon/src/app/components/item-card/item-card.component.html",
		"/Users/geoff/Source/silicon/src/app/components/item-list-view/item-list-view.component.ts",
		"/Users/geoff/Source/silicon/src/app/app.component.ts",
		"/Users/geoff/Source/silicon/src/app/components/dynamic-datetime/dynamic-datetime.component.ts",
		"/Users/geoff/Source/silicon/src/app/profile/profile.module.ts",
		"/Users/geoff/Source/silicon/src/app/components/item-list-view/item-list-view.component.html",
		"/Users/geoff/Source/silicon/src/app/components/item-more-menu/item-more-menu.component.ts",
		"/Users/geoff/Source/silicon/src/app/components/components.module.ts",
		"/Users/geoff/Source/silicon/src/app/components/item-card/item-card.component.spec.ts",
		"/Users/geoff/Source/silicon/src/app/components/item-more-menu/item-more-menu.component.spec.ts",
		"/Users/geoff/Source/silicon/src/app/note-edit/note-edit.page.ts",
		"/Users/geoff/Source/silicon/src/app/note-edit/note-edit.page.html",
		"/Users/geoff/Source/silicon/src/app/components/note-card/note-card.component.ts",
		"/Users/geoff/Source/silicon/src/app/components/note-card/note-card.component.html",
		"/Users/geoff/Source/silicon/src/app/note/note.page.ts",
		"/Users/geoff/Source/silicon/src/app/app.component.html",
		"/Users/geoff/Source/silicon/src/app/note/note.page.html",
		"/Users/geoff/Source/silicon/src/app/note/note.module.ts",
		"/Users/geoff/Source/silicon/src/app/app.module.ts",
		"/Users/geoff/Source/silicon/src/app/note-edit/note-edit.module.ts",
		"/Users/geoff/Source/silicon/src/app/profile/profile.page.html",
		"/Users/geoff/Source/silicon/src/app/profile/profile.page.scss",
		"/Users/geoff/Source/silicon/src/app/components/note-more-menu/note-more-menu.component.ts",
		"/Users/geoff/Source/silicon/src/app/components/note-more-menu/note-more-menu.component.html",
		"/Users/geoff/Source/silicon/src/app/profile/profile.page.ts",
		"/Users/geoff/Source/silicon/src/app/tabs/tabs.page.ts",
		"/Users/geoff/Source/silicon/src/theme/variables.scss",
		"/Users/geoff/Source/silicon/src/app/components/note-card/note-card.component.scss",
		"/Users/geoff/Source/silicon/src/app/services/server-events.service.ts",
		"/Users/geoff/Source/silicon/src/app/tabs/tabs.module.ts",
		"/Users/geoff/Source/silicon/src/app/services/watch.service.ts",
		"/Users/geoff/Source/silicon/src/app/services/backend.service.ts",
		"/Users/geoff/Source/silicon/src/app/services/api.service.ts",
		"/Users/geoff/Source/silicon/src/app/register/register.page.ts",
		"/Users/geoff/Source/silicon/src/app/login/login.page.ts",
		"/Users/geoff/Source/silicon/src/app/tabs/tabs.router.module.ts",
		"/Users/geoff/Source/silicon/src/app/app-routing.module.ts",
		"/Users/geoff/Source/silicon/.gitignore",
		"/Users/geoff/Source/silicon/src/app/test/test.page.html",
		"/Users/geoff/Source/silicon/src/app/test/test.module.ts",
		"/Users/geoff/Source/silicon/src/app/test/test.page.ts",
		"/Users/geoff/Source/silicon/src/app/services/watch.service.spec.ts",
		"/Users/geoff/Source/silicon/src/app/storage/storage.page.ts",
		"/Users/geoff/Source/silicon/src/app/storage/storage.page.html",
		"/Users/geoff/Source/silicon/src/app/models/ItemList.ts",
		"/Users/geoff/Source/silicon/package.json",
		"/Users/geoff/Source/silicon/src/app/services/outbox.service.ts",
		"/Users/geoff/Source/silicon/src/app/item-list-view/item-list-view.component.ts",
		"/Users/geoff/Source/silicon/src/config.ts",
		"/Users/geoff/Source/silicon/src/index.html",
		"/Users/geoff/Source/silicon/src/environments/environment.ts",
		"/Users/geoff/Source/silicon/src/app/directives/directives.module.ts",
		"/Users/geoff/Source/silicon/node_modules/@types/ws/index.d.ts",
		"/Users/geoff/Source/silicon/src/app/models/Container.ts",
		"/Users/geoff/Source/silicon/src/app/models/ContainerList.ts",
		"/Users/geoff/Source/silicon/src/app/components/dynamic-datetime/dynamic-datetime.component.html",
		"/Users/geoff/Source/silicon/src/app/pipes/pipes.module.ts",
		"/Users/geoff/Source/silicon/src/app/pipes/social-date/social-date.pipe.ts",
		"/Users/geoff/Source/silicon/src/app/note-card/note-card.component.ts",
		"/Users/geoff/Source/silicon/src/app/tabs/tabs.page.html",
		"/Users/geoff/Source/silicon/src/app/directives/autoresize.directive.spec.ts",
		"/Users/geoff/Source/silicon/src/app/note-edit/note-edit.page.spec.ts",
		"/Users/geoff/Source/silicon/src/app/services/outbox.service.spec.ts",
		"/Users/geoff/Source/silicon/src/models.ts",
		"/Users/geoff/Source/silicon/src/app/directives/autoresize.directive.ts",
		"/Users/geoff/Source/silicon/src/app/register/register.page.html",
		"/Users/geoff/Source/silicon/src/app/login/login.page.html",
		"/Users/geoff/Source/silicon/src/app/not-found/not-found.page.html",
		"/Users/geoff/Source/silicon/src/polyfills.ts",
		"/Users/geoff/Source/silicon/src/app/newsfeed/newsfeed.page.html",
		"/Users/geoff/Source/silicon/src/app/files/files.page.html",
		"/Users/geoff/Source/silicon/src/app/files/files.page.ts",
		"/Users/geoff/Source/silicon/src/app/files/files.module.ts",
		"/Users/geoff/Source/silicon/config.xml",
		"/Users/geoff/Source/silicon/node_modules/@ionic-native/network/index.d.ts",
		"/Users/geoff/Source/silicon/src/app/search/search.page.html",
		"/Users/geoff/Source/silicon/src/app/tab1/tab1.page.html",
		"/Users/geoff/Source/t1/src/app/app-routing.module.ts",
		"/Users/geoff/Source/t1/src/app/tabs/tabs.page.html",
		"/Users/geoff/Source/silicon/src/app/tabs/tabs.html",
		"/Users/geoff/Source/silicon/src/app/tabs/tabs.ts",
		"/Users/geoff/Source/t1/src/app/tabs/tabs.page.ts",
		"/Users/geoff/Source/silicon/src/app/app.component.spec.ts",
		"/Users/geoff/Source/t1/src/app/app.component.spec.ts",
		"/Users/geoff/Source/t1/src/app/app.component.ts",
		"/Users/geoff/Source/t1/src/app/app.module.ts",
		"/Users/geoff/Source/silicon/README.md",
		"/Users/geoff/Source/fluorine/package.json",
		"/Users/geoff/Source/fluorine/src/server.ts",
		"/Users/geoff/Source/fluorine/src/lib/results.ts",
		"/Users/geoff/Source/fluorine/test/test_init.ts",
		"/Users/geoff/Source/fluorine/src/App.ts",
		"/Users/geoff/Source/fluorine/src/routes/Routes.ts",
		"/Users/geoff/Source/fluorine/src/controllers/SearchController.ts",
		"/Users/geoff/Source/fluorine/test/Search.spec.ts",
		"/Users/geoff/Source/fluorine/src/models/AuthTokenSchema.ts",
		"/Users/geoff/Source/fluorine/test/AuthToken.spec.ts",
		"/Users/geoff/Source/fluorine/src/models/UserSchema.ts",
		"/Users/geoff/Source/fluorine/src/controllers/UserController.ts",
		"/Users/geoff/Source/fluorine/test/User.spec.ts",
		"/Users/geoff/Source/fluorine/src/models/ProfileSchema.ts",
		"/Users/geoff/Source/fluorine/src/controllers/ProfileController.ts",
		"/Users/geoff/Source/fluorine/test/Profile.spec.ts",
		"/Users/geoff/Source/fluorine/src/models/StorySchema.ts",
		"/Users/geoff/Source/fluorine/src/controllers/StoryController.ts",
		"/Users/geoff/Source/fluorine/test/Story.spec.ts",
		"/Users/geoff/Source/fluorine/src/models/NoteSchema.ts",
		"/Users/geoff/Source/fluorine/src/controllers/NoteController.ts",
		"/Users/geoff/Source/fluorine/test/Note.spec.ts",
		"/Users/geoff/Source/fluorine/src/lib/feeds.ts",
		"/Users/geoff/Source/fluorine/config/dev.ts",
		"/Users/geoff/Source/fluorine/nodemon.json",
		"/Users/geoff/Source/fluorine/src/controllers/MediaController.ts",
		"/Users/geoff/Source/fluorine/node_modules/why-is-node-running/index.js",
		"/Users/geoff/Source/fluorine/config/test.ts",
		"/Users/geoff/Source/fluorine/src/models/MediaSchema.ts",
		"/Users/geoff/Source/fluorine/src/models/AdventureSchema.ts",
		"/Users/geoff/Source/fluorine/tsconfig.json",
		"/Users/geoff/Source/fluorine/src/models/TestSchema.ts",
		"/Users/geoff/Source/fluorine/src/controllers/test.ts",
		"/Users/geoff/Source/fluorine/dist/controllers/test.js",
		"/Users/geoff/Source/fluorine/dist/controllers/NoteController.js",
		"/Users/geoff/Source/fluorine/config/production.ts"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			"/Users/geoff/Source/silicon/src",
			"/Users/geoff/Source/silicon/src/assets/icons",
			"/Users/geoff/Source/silicon/src",
			"*.ts",
			"*.js",
			"*.ts",
			"",
			"/Users/geoff/Source/fluorine/dist",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"getContainerItems",
			"[]",
			"containeesid(",
			"this.storage.get(containeesid",
			"containerIds",
			"getContainerItems",
			"this.list",
			"uploadedImages",
			"newNote()",
			"ar",
			"console.error",
			"console.",
			"console.log(",
			"function log(",
			"eventContainerAdd",
			".log",
			"ItemListViewComponent",
			"console.log(",
			"log(.",
			".log",
			"console.log",
			"console.",
			"note",
			"note-card",
			"note",
			"NoteMore",
			"Note",
			"note",
			"Note",
			"note",
			"note.",
			"NoteCard",
			"Note",
			"note",
			"Note",
			"note",
			"Note",
			"mediaList",
			"this.api",
			"removeMedia",
			"newMediaList",
			"mediaList",
			"deleteMediaList",
			"mediaList",
			"background",
			"note",
			"background",
			"item",
			"container",
			"newItem",
			"item",
			"itemId",
			"itemListView",
			"backend",
			"events",
			"alertCtrl",
			" size=\"small\"",
			"<ion-item button ",
			"buttton",
			"remport",
			"remove",
			"modalCtrl",
			"NoteEditPage",
			"ev",
			"entryComponents",
			"WatchItems.re",
			"deleteMediaList",
			"isNew",
			"saveNote",
			"mediaList",
			"modalCtrl",
			"events",
			"item",
			"modalCtrl",
			"ion-router-outlet",
			"modalCtrl",
			"app/",
			"modalCtrl",
			"forgotPassword",
			"modalCtrl",
			"register",
			"this.dismiss",
			"login()",
			"view",
			"rootId",
			"addWatch",
			"addWatchList",
			"WatchService",
			"ServerEventsService",
			"profile",
			"type",
			"results of container delete of",
			"removeContainerItems",
			"problem processing Outbox Update",
			"unable to remove item from container",
			"REL_DEL",
			"removeFromContainer",
			"date",
			"REL_DEL",
			"EVENT_WEBSOCKET_OPEN",
			"api",
			"open()",
			"networkConnect",
			"newItems",
			"getContainerItems",
			"fromJSON",
			"items",
			"cache",
			"itemListView",
			"removeIdFromStorageList",
			"CacheService",
			"watch",
			"refresh",
			"cache.remove",
			"api.delete(",
			"sortByCreatedAt",
			"getContainerItems",
			"container",
			"EVENT_SERVER_CONTAINEE_ADDED",
			"containerAdd",
			"ContainerRelationship",
			"delete(",
			"delete",
			"now",
			"addToContainer",
			"createdAt",
			"CACHE_",
			"cache"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"getItemContainees",
			"log(",
			"item_id",
			"stories",
			"Stories",
			"story",
			"stories",
			"story",
			"stories",
			"story",
			"Story"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 23,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/geoff/Source/silicon/src/app/constants.events.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1677,
						"regions":
						{
						},
						"selection":
						[
							[
								1504,
								1504
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1670,
										1671
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1502,
										1503
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/geoff/Source/silicon/src/app/services/outbox.service.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8437,
						"regions":
						{
						},
						"selection":
						[
							[
								2799,
								2799
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										5048,
										5049
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										2801,
										2802
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2798,
										2799
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1927,
										1928
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/geoff/Source/silicon/src/app/models/Item.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10967,
						"regions":
						{
						},
						"selection":
						[
							[
								944,
								944
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										10855,
										10856
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										10630,
										10631
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										116,
										117
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/geoff/Source/silicon/src/app/note-edit/note-edit.page.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 67,
						"regions":
						{
						},
						"selection":
						[
							[
								13,
								13
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Sass/Syntaxes/SCSS.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/geoff/Source/silicon/src/app/services/backend.service.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7430,
						"regions":
						{
						},
						"selection":
						[
							[
								553,
								553
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Users/geoff/Source/silicon/src/app/services/api.service.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5557,
						"regions":
						{
						},
						"selection":
						[
							[
								1425,
								1425
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										511,
										512
									]
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1452,
										1453
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1073,
										1074
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/Users/geoff/Source/silicon/src/app/services/cache.service.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13537,
						"regions":
						{
						},
						"selection":
						[
							[
								7019,
								7019
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										13535,
										13536
									]
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										7018,
										7019
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										6951,
										6952
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 2666.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4994,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										286,
										303
									],
									[
										570,
										587
									],
									[
										860,
										877
									],
									[
										1165,
										1182
									],
									[
										1221,
										1238
									],
									[
										1385,
										1402
									],
									[
										1486,
										1503
									],
									[
										1590,
										1607
									],
									[
										1751,
										1768
									],
									[
										2015,
										2032
									],
									[
										2196,
										2213
									],
									[
										2407,
										2424
									],
									[
										2784,
										2801
									],
									[
										3068,
										3085
									],
									[
										3358,
										3375
									],
									[
										3663,
										3680
									],
									[
										3719,
										3736
									],
									[
										3883,
										3900
									],
									[
										3984,
										4001
									],
									[
										4088,
										4105
									],
									[
										4249,
										4266
									],
									[
										4513,
										4530
									],
									[
										4694,
										4711
									],
									[
										4905,
										4922
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								3862,
								3862
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"detect_indentation": false,
							"git_gutter_is_enabled": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 915.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/Users/geoff/Source/silicon/src/app/components/item-card/item-card.component.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2212,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/Users/geoff/Source/silicon/src/main.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 408,
						"regions":
						{
						},
						"selection":
						[
							[
								407,
								407
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/Users/geoff/Source/silicon/src/app/storage/storage.page.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1763,
						"regions":
						{
						},
						"selection":
						[
							[
								654,
								654
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										936,
										937
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										568,
										569
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										964,
										965
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										612,
										613
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/Users/geoff/Source/silicon/src/app/services/watch.service.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1784,
						"regions":
						{
						},
						"selection":
						[
							[
								1515,
								1515
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1743,
										1744
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1467,
										1468
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1778,
										1779
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1510,
										1511
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/Users/geoff/Source/silicon/src/app/services/server-events.service.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3817,
						"regions":
						{
						},
						"selection":
						[
							[
								133,
								133
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1173,
										1174
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1063,
										1064
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										137,
										138
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										131,
										132
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/Users/geoff/Source/silicon/src/app/profile/profile.page.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2763,
						"regions":
						{
						},
						"selection":
						[
							[
								242,
								242
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1869,
										1870
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1477,
										1478
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/Users/geoff/Source/silicon/src/app/pipes/social-date/social-date.pipe.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1678,
						"regions":
						{
						},
						"selection":
						[
							[
								1125,
								1125
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1638,
										1639
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										217,
										218
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1124,
										1125
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										1114,
										1115
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/Users/geoff/Source/silicon/src/app/note/note.page.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1480,
						"regions":
						{
						},
						"selection":
						[
							[
								203,
								203
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1038,
										1039
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										729,
										730
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/Users/geoff/Source/silicon/src/app/login/login.page.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1734,
						"regions":
						{
						},
						"selection":
						[
							[
								892,
								892
							],
							[
								1174,
								1174
							],
							[
								1316,
								1316
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1478,
										1479
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										822,
										823
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1497,
										1498
									],
									"2":
									[
										1290,
										1291
									],
									"3":
									[
										1491,
										1492
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									],
									"2":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									],
									"3":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										865,
										866
									],
									"2":
									[
										1164,
										1165
									],
									"3":
									[
										1306,
										1307
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/Users/geoff/Source/silicon/src/app/files/files.page.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8737,
						"regions":
						{
						},
						"selection":
						[
							[
								1304,
								1304
							],
							[
								1502,
								1502
							],
							[
								1991,
								1991
							],
							[
								2158,
								2158
							],
							[
								2318,
								2318
							],
							[
								2713,
								2713
							],
							[
								2868,
								2868
							],
							[
								3339,
								3339
							],
							[
								3534,
								3534
							],
							[
								3803,
								3803
							],
							[
								3994,
								3994
							],
							[
								4133,
								4133
							],
							[
								4394,
								4394
							],
							[
								4981,
								4981
							],
							[
								5063,
								5063
							],
							[
								5092,
								5092
							],
							[
								5244,
								5244
							],
							[
								5403,
								5403
							],
							[
								5569,
								5569
							],
							[
								5656,
								5656
							],
							[
								5789,
								5789
							],
							[
								6174,
								6174
							],
							[
								6278,
								6278
							],
							[
								8269,
								8269
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1358,
										1359
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1201,
										1202
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "/Users/geoff/Source/silicon/src/app/directives/autoresize/autoresize.directive.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 620,
						"regions":
						{
						},
						"selection":
						[
							[
								410,
								410
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										642,
										643
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										408,
										409
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										615,
										616
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										408,
										409
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/Users/geoff/Source/silicon/src/app/components/item-more-menu/item-more-menu.component.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1585,
						"regions":
						{
						},
						"selection":
						[
							[
								155,
								155
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										842,
										843
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										674,
										675
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										165,
										166
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/single_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										151,
										152
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/Users/geoff/Source/silicon/src/app/note-edit/note-edit.page.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7062,
						"regions":
						{
						},
						"selection":
						[
							[
								944,
								944
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										948,
										949
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										942,
										943
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/Users/geoff/Source/silicon/src/app/components/item-card/item-card.component.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2292,
						"regions":
						{
						},
						"selection":
						[
							[
								1061,
								1061
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/Users/geoff/Source/silicon/src/app/note-edit/note-edit.page.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2167,
						"regions":
						{
						},
						"selection":
						[
							[
								806,
								806
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										1972,
										1985
									]
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/Users/geoff/Source/silicon/src/app/components/item-list-view/item-list-view.component.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7029,
						"regions":
						{
						},
						"selection":
						[
							[
								3589,
								3589
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										3899,
										3900
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										3286,
										3287
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4153,
										4154
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										3395,
										3396
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 1268.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 100.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/TypeScript/TypeScript.sublime-build",
	"project": "mario.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"log.ts",
				"silicon/src/app/lib/log.ts"
			],
			[
				"app.m",
				"silicon/src/app/app.module.ts"
			],
			[
				"adv",
				"test/Adventure.spec.ts"
			],
			[
				"info.p",
				"platforms/ios/build/emulator/Beryllium.app/Info.plist"
			],
			[
				"applica",
				"app/views/layouts/application.html.erb"
			],
			[
				"persona",
				"app/models/persona.rb"
			],
			[
				"test_helper",
				"app/helpers/test_helper.rb"
			],
			[
				"application",
				"app/views/layouts/application.html.erb"
			],
			[
				"new.",
				"app/views/sessions/new.html.erb"
			],
			[
				"tests_h",
				"test/test_helper.rb"
			],
			[
				"perso",
				"app/models/persona.rb"
			],
			[
				"route",
				"config/routes.rb"
			],
			[
				"sessions_con",
				"test/controllers/sessions_controller_test.rb"
			],
			[
				"user_mai",
				"test/mailers/user_mailer_test.rb"
			],
			[
				"arts",
				"test/models/artsite_test.rb"
			],
			[
				"import",
				"app/jobs/import_from_artsites_job.rb"
			],
			[
				"impo",
				"app/controllers/import_controller.rb"
			],
			[
				"form",
				"app/models/form.rb"
			],
			[
				"profi",
				"app/models/profile.rb"
			],
			[
				"artsite",
				"app/models/artsite.rb"
			],
			[
				"sys",
				"app/controllers/sysop_controller.rb"
			],
			[
				"layout",
				"app/views/layouts/lustrio/layout.html.erb"
			],
			[
				"profile.r",
				"app/models/profile.rb"
			],
			[
				"index.h",
				"app/views/profiles/index.html.erb"
			],
			[
				"artsi",
				"test/models/artsite_test.rb"
			],
			[
				"form_te",
				"test/models/form_test.rb"
			],
			[
				"pages_",
				"app/controllers/pages_controller.rb"
			],
			[
				"collection.js",
				"app/assets/javascripts/admin/collection.js"
			],
			[
				"blog.",
				"app/models/blog.rb"
			],
			[
				"page_te",
				"test/models/page_test.rb"
			],
			[
				"admin_co",
				"app/controllers/admin_controller.rb"
			],
			[
				"art",
				"app/models/artsite.rb"
			],
			[
				"collec",
				"app/models/collection.rb"
			],
			[
				"article_c",
				"app/controllers/articles_controller.rb"
			],
			[
				"page_test",
				"test/models/page_test.rb"
			],
			[
				"site-",
				"test/fixtures/files/site-dev1.json"
			],
			[
				"page.rb",
				"app/models/page.rb"
			],
			[
				"event",
				"app/models/event.rb"
			],
			[
				"document",
				"app/models/document.rb"
			],
			[
				"users",
				"app/views/sysop/users.html.erb"
			],
			[
				"admin_c",
				"app/controllers/admin_controller.rb"
			],
			[
				"session",
				"app/controllers/sessions_controller.rb"
			],
			[
				"user",
				"app/mailers/user_mailer.rb"
			],
			[
				"deve",
				"config/environments/development.rb"
			],
			[
				"profile",
				"app/models/profile.rb"
			],
			[
				"users.",
				"app/views/sysop/users.html.erb"
			],
			[
				"page",
				"app/models/page.rb"
			],
			[
				"page.",
				"app/models/page.rb"
			],
			[
				"domain",
				"app/models/domain.rb"
			],
			[
				"layout.h",
				"app/views/layouts/lustrio/layout.html.erb"
			],
			[
				"_head",
				"app/views/layouts/_head.html.erb"
			],
			[
				"una",
				"app/views/dashboard/unauthenticated_home.html.erb"
			],
			[
				"colle",
				"app/models/collection.rb"
			],
			[
				"collection.j",
				"app/assets/javascripts/admin/page_collection.js"
			],
			[
				"des",
				"app/views/admin/design.html.erb"
			],
			[
				"pages",
				"app/assets/javascripts/admin/pages.js"
			],
			[
				"pages.",
				"app/controllers/pages_controller.rb"
			],
			[
				"page.r",
				"app/models/page.rb"
			],
			[
				"custom",
				"app/models/custom_path.rb"
			],
			[
				"_page_list",
				"app/views/admin/_page_listview_item.html.erb"
			],
			[
				"new_pa",
				"app/views/admin/new_page.html.erb"
			],
			[
				"admin",
				"app/controllers/admin_controller.rb"
			],
			[
				"page_c",
				"app/assets/stylesheets/admin/page_collection.scss"
			],
			[
				"doc",
				"app/models/document.rb"
			],
			[
				"custom_path",
				"app/views/application/_custom_path_editor.html.erb"
			],
			[
				"docu",
				"app/models/document.rb"
			],
			[
				"style",
				"app/models/style_set.rb"
			],
			[
				"dash",
				"app/controllers/dashboard_controller.rb"
			],
			[
				"authen",
				"app/controllers/concerns/authentication.rb"
			],
			[
				"custom_p",
				"app/models/custom_path.rb"
			],
			[
				"coll",
				"app/models/collection.rb"
			],
			[
				"temp",
				"app/models/template.rb"
			],
			[
				"default.html",
				"app/views/layouts/default.html.erb"
			],
			[
				"appl",
				"config/application.rb"
			],
			[
				"profiles.h",
				"app/views/sysop/profiles.html.erb"
			],
			[
				"import_ma",
				"test/mailers/import_mailer_test.rb"
			],
			[
				"import_t",
				"test/mailers/import_mailer_test.rb"
			],
			[
				"document_",
				"test/models/document_test.rb"
			],
			[
				"artsite_t",
				"test/models/artsite_test.rb"
			],
			[
				"pages_h",
				"app/helpers/pages_helper.rb"
			],
			[
				"layout_h",
				"app/helpers/layout_helper.rb"
			],
			[
				"design",
				"app/views/admin/design.html.erb"
			],
			[
				"sty",
				"app/models/style_set.rb"
			],
			[
				"to_s",
				"lib/to_slug.rb"
			],
			[
				"scaff",
				"app/assets/stylesheets/lib/scaffolds.css"
			],
			[
				"site.",
				"app/models/site.rb"
			],
			[
				"default",
				"app/views/layouts/default.html.erb"
			],
			[
				"style_s",
				"app/models/style_set.rb"
			],
			[
				"ustom",
				"app/views/pages/custom.css.erb"
			],
			[
				"toolbar",
				"app/views/admin/_toolbars.html.erb"
			],
			[
				"arti",
				"app/models/article.rb"
			],
			[
				"domain.r",
				"app/models/domain.rb"
			],
			[
				"custom_",
				"app/models/custom_path.rb"
			],
			[
				"process",
				"app/views/import/process_import.html.erb"
			],
			[
				"process_",
				"app/views/import/process_import.html.erb"
			],
			[
				"prod",
				"config/environments/production.rb"
			],
			[
				"documenta",
				"app/models/concerns/Documentable.rb"
			],
			[
				"page_d",
				"app/models/page_document.rb"
			],
			[
				"documentab",
				"app/models/concerns/Documentable.rb"
			],
			[
				"product",
				"config/environments/production.rb"
			],
			[
				"devel",
				"config/environments/development.rb"
			],
			[
				"sysoph",
				"app/helpers/sysop_helper.rb"
			],
			[
				"site.rb",
				"app/models/site.rb"
			],
			[
				"artsites",
				"test/models/artsite_test.rb"
			],
			[
				"sysop",
				"app/controllers/sysop_controller.rb"
			],
			[
				"artic",
				"app/models/article.rb"
			],
			[
				"blog.rb",
				"app/models/blog.rb"
			],
			[
				"pages.h",
				"app/views/admin/pages.html.erb"
			],
			[
				"tinymce",
				"config/tinymce.yml"
			],
			[
				"pages_c",
				"app/controllers/pages_controller.rb"
			],
			[
				"create",
				"app/views/import/create.html.erb"
			],
			[
				"galleries_con",
				"app/controllers/galleries_controller.rb"
			],
			[
				"custom_path_",
				"test/models/custom_path_test.rb"
			],
			[
				"articles_c",
				"test/controllers/articles_controller_test.rb"
			],
			[
				"page_t",
				"test/models/page_test.rb"
			],
			[
				"collect",
				"app/assets/javascripts/admin/collection_editor.js"
			],
			[
				"menu",
				"app/models/menu.rb"
			],
			[
				"works_c",
				"app/controllers/works_controller.rb"
			],
			[
				"_custom",
				"app/views/application/_custom_path_editor.html.erb"
			],
			[
				"_menu_",
				"app/views/application/_menu_editor.html.erb"
			],
			[
				"articles",
				"test/controllers/articles_controller_test.rb"
			],
			[
				"_editor",
				"app/views/application/_editor.html.erb"
			],
			[
				"helper_g",
				"app/helpers/galleries_helper.rb"
			],
			[
				"nav",
				"app/controllers/settings/navigation_controller.rb"
			],
			[
				"menu.",
				"app/models/menu.rb"
			],
			[
				"galleries_c",
				"test/controllers/galleries_controller_test.rb"
			],
			[
				"gallery",
				"test/controllers/custom/gallery_controller_test.rb"
			],
			[
				"gal",
				"app/models/gallery_work.rb"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Source/lustrio/lustrio.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 945.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 324.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
